{"version":3,"sources":["webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.css","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.css","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.html","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.component.css","webpack:///./src/app/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/recipes/recipe-start/recipe-start.component.css","webpack:///./src/app/recipes/recipe-start/recipe-start.component.html","webpack:///./src/app/recipes/recipe-start/recipe-start.component.ts","webpack:///./src/app/recipes/recipes-routing.module.ts","webpack:///./src/app/recipes/recipes.component.css","webpack:///./src/app/recipes/recipes.component.html","webpack:///./src/app/recipes/recipes.component.ts","webpack:///./src/app/recipes/recipes.module.ts"],"names":[],"mappings":"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","file":"recipes-recipes-module.js","sourcesContent":["import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n\r\n    constructor(private authService: AuthService){}\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n        return this.authService.isAuthenticated();\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <img [src]=\\\"recipe.imagePath\\\" alt=\\\"\\\" class=\\\"img-responsive\\\">\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>{{recipe.name}}</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div \\n    class=\\\"btn-group\\\"\\n    appDropdown>\\n      <button \\n      type=\\\"button\\\"\\n      class=\\\"btn btn-primary dropdown-toggle\\\">\\n      Manage Recipe <span class=\\\"caret\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"addToShoppingList()\\\">To Shopping List</a></li>\\n        <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onEditRecipe()\\\">Edit Recipe</a></li>\\n        <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onDeleteRecipe()\\\">Delete Recipe</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    {{recipe.description}}\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li \\n      class=\\\"list-gropu-item\\\"\\n      *ngFor=\\\"let ingridient of recipe.ingridients\\\">\\n      {{ingridient.name}} - {{ingridient.amount}}\\n      </li>\\n    </ul>\\n  </div>\\n</div>\"","import { AuthService } from './../../auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from './../recipe.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe:Recipe;\n  id:number;\n  constructor(private recipeService:RecipeService,\n              private route: ActivatedRoute,\n              private router:Router,\n              private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params:Params)=>{\n        this.id= +params['id'];\n        this.recipe=this.recipeService.getRecipe(this.id);\n      }\n    );\n  }\n  addToShoppingList(){\n    this.recipeService.addIngridientsToShoppingList(this.recipe.ingridients);\n  }\n\n  onEditRecipe(){\n    this.router.navigate(['edit'],{relativeTo:this.route});\n    //this.router.navigate(['../',this.id,'edit'],{relativeTo:this.route});\n  }\n\n  onDeleteRecipe(){\n    if(this.authService.isAuthenticated()){\n      this.recipeService.deleteRecipe(this.id);\n    }\n    this.router.navigateByUrl('/recipes');\n  }\n}\n","module.exports = \"input.ng-invalid.ng-touched,\\r\\ntextarea.ng-invalid.ng-touched{\\r\\n    border: 1px solid red;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form [formGroup]=\\\"recipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button \\n          type=\\\"submit\\\" \\n          class=\\\"btn btn-success\\\"\\n          [disabled]=\\\"!recipeForm.valid\\\">Save</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" \\n            id=\\\"name\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"name\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"imagePath\\\">Image Url</label>\\n            <input type=\\\"text\\\" \\n            id=\\\"imagePath\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"imagePath\\\"\\n            #imagepath>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <img [src]=\\\"imagepath.value\\\" class=\\\"img-responsive\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\">Description</label>\\n            <textarea type=\\\"text\\\" \\n            id=\\\"description\\\"\\n            class=\\\"form-control\\\"\\n            rows=\\\"6\\\"\\n            formControlName=\\\"description\\\"></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\" formArrayName=\\\"ingridients\\\">\\n          <div class=\\\"row\\\" \\n          *ngFor=\\\"let ingridientCtrl of recipeForm.get('ingridients').controls; let i = index\\\"\\n          [formGroupName]=\\\"i\\\"\\n          style=\\\"margin-top:10px;\\\">\\n            <div class=\\\"col-xs-8\\\">\\n              <input type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"name\\\">\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <input type=\\\"number\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"amount\\\">\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <button \\n              class=\\\"btn btn-danger\\\"\\n              type=\\\"button\\\" \\n              (click)=\\\"onRemoveIngridient(i)\\\">X</button>\\n            </div>\\n          </div>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <button \\n              type=\\\"button\\\"\\n              class=\\\"btn btn-success\\\" \\n              (click)=\\\"onAddIngridient()\\\">Add Ingridient</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { RecipeService } from './../recipe.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { Recipe } from '../recipe.model';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id:number;\n  editMode:boolean=false;\n  recipeForm:FormGroup;\n  constructor(private route: ActivatedRoute,\n              private recipeService:RecipeService,\n              private router:Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params:Params)=>{\n        this.id=+params['id'];\n        this.editMode= params['id'] != null;\n        this.initForm();\n      }\n    );\n  }\n\n  private initForm(){\n    let recipeName='';\n    let reeipeImagePath='';\n    let recipeDescription='';\n    let recipeIngridients = new FormArray([]);\n\n    if(this.editMode){\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName= recipe.name;\n      recipeDescription=recipe.description;\n      reeipeImagePath=recipe.imagePath;\n      if(recipe['ingridients']){\n        for (const ingridient of recipe.ingridients) {\n          recipeIngridients.push(\n            new FormGroup({\n              'name' : new FormControl(ingridient.name, Validators.required),\n              'amount' : new FormControl(ingridient.amount,[\n                Validators.required,\n                Validators.pattern(/^[1-9]+[0-9]*$/)\n              ])\n            })\n          );\n        }\n      }\n    }\n    this.recipeForm = new FormGroup({\n      'name' : new FormControl(recipeName, Validators.required),\n      'imagePath' : new FormControl(reeipeImagePath, Validators.required),\n      'description' : new FormControl(recipeDescription, Validators.required),\n      'ingridients' : recipeIngridients\n    });\n  }\n\n  onAddIngridient(){\n    (<FormArray>this.recipeForm.get('ingridients')).push(\n      new FormGroup({\n        'name' : new FormControl(null,Validators.required),\n        'amount' : new FormControl(null,[\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/)\n        ])\n      })\n    );\n  }\n\n\n  onSubmit(){\n    // const newRecipe = new Recipe(\n    //   this.recipeForm.value['name'],\n    //   this.recipeForm.value['description'],\n    //   this.recipeForm.value['imagePath'],\n    //   this.recipeForm.value['ingridients']\n    // );\n    if(this.editMode){\n      this.recipeService.updateRecipe(this.id,this.recipeForm.value);\n    }else{\n      this.recipeService.addRrecipe(this.recipeForm.value);\n    }\n    this.onCancel();\n  }\n\n  onCancel(){\n    this.router.navigate(['../'],{relativeTo:this.route});\n  }\n\n  onRemoveIngridient(index:number){\n    (<FormArray>this.recipeForm.get('ingridients')).removeAt(index);\n  }\n}\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"[index]\\\" \\nrouterLinkActive=\\\"active\\\"\\nclass=\\\"list-group-item clearfix\\\">\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">{{recipe.name}}</h4>\\n    <p class=\\\"list-group-item-text\\\">{{recipe.description}}</p>\\n  </div>\\n  <span class=\\\"pull-right\\\">\\n    <img src=\\\"{{recipe.imagePath}}\\\" alt=\\\"\\\" class=\\\"img-responsie\\\" style=\\\"max-height: 50px;\\\">\\n  </span>\\n</a>\"","import { Component, OnInit, Input} from '@angular/core';\nimport { Recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n\n  @Input('recipe-item') recipe:Recipe;\n  @Input() index:number;\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"onCreateNewRecipe()\\\">New Recipe</button>\\n    </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n        <app-recipe-item \\n        *ngFor=\\\"let recipe of recipes; let i= index\\\" \\n        [recipe-item]= recipe\\n        [index]=\\\"i\\\"></app-recipe-item>\\n    </div>\\n</div>\"","import { Subscription } from 'rxjs';\nimport { Component, OnInit, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit,OnDestroy {\n  subscription:Subscription;\n  recipes:Recipe[];\n  @Output() recipeWasSelected = new EventEmitter<Recipe>();\n  \n  constructor(private recipeService:RecipeService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.subscription=this.recipeService.recipesChanged.subscribe(\n      (recipes:Recipe[])=>{\n        this.recipes=recipes;\n      }\n    );\n    this.recipes=this.recipeService.getRecipes();\n  }\n\n  onCreateNewRecipe(){\n    this.router.navigate(['new'],{relativeTo: this.route});\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3>Please Select recipe</h3>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { AuthGuard } from \"../auth/auth-guard.service\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\n\r\n\r\n\r\nconst recipesRoutes: Routes=[\r\n    {path: '',component: RecipesComponent, children:[\r\n        {path:'',component: RecipeStartComponent},\r\n        {path: 'new', component: RecipeEditComponent,canActivate: [AuthGuard]},\r\n        {path:':id',component:RecipeDetailComponent},\r\n        {path:':id/edit',component:RecipeEditComponent,canActivate: [AuthGuard]}\r\n    ]}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(recipesRoutes)],\r\n    exports: [RouterModule],\r\n    providers : [AuthGuard]\r\n})\r\nexport class RecipesRoutingModule{\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-recipe-list></app-recipe-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","import { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeListComponent } from \"./recipe-list/recipe-list.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { RecipeItemComponent } from \"./recipe-list/recipe-item/recipe-item.component\";\r\nimport { DropdownDirective } from \"../shared/dropdown.directive\";\r\nimport { RecipesRoutingModule } from './recipes-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations:[\r\n        RecipesComponent,\r\n        RecipeListComponent,\r\n        RecipeStartComponent,\r\n        RecipeEditComponent,\r\n        RecipeDetailComponent,\r\n        RecipeItemComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        RecipesRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class RecipesModule{\r\n\r\n}"],"sourceRoot":""}